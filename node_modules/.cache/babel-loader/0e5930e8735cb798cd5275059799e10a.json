{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/ONY/exercice/MiseEnLigneFront/src/PostForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass PostForm extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      this.setState({\n        nb: this.state.nb + 1,\n        mme: this.state.mme + parseInt(this.getPrenom.value)\n      });\n      const nom = this.getNom.value;\n      const prenom = this.getPrenom.value;\n      const produit = nom.charAt(0).toUpperCase() + nom.substring(1).toLowerCase();\n      const data = {\n        id: new Date(),\n        nb: this.state.nb,\n        produit,\n        prenom,\n        mme: this.state.mme + parseInt(prenom),\n        editing: false\n      };\n      this.props.dispatch({\n        type: 'ADD_POST',\n        data\n      });\n      this.getNom.value = '';\n      this.getPrenom.value = '';\n      console.log('data1', data.mme);\n    };\n\n    this.state = {\n      nb: 0,\n      mme: 0\n    };\n  }\n\n  render() {\n    return React.createElement(\"center\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        if (!this.getNom.value || !this.getPrenom.value) return;\n\n        if (isNaN(this.getPrenom.value)) {\n          var err = document.getElementById('erreur');\n          err.innerHTML = 'Entrer un nombre';\n        } else {\n          this.handleSubmit();\n          var err = document.getElementById('erreur');\n          err.innerHTML = '';\n        }\n      },\n      className: 'nom',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Produit\"), React.createElement(\"input\", {\n      required: true,\n      type: \"text\",\n      ref: input => this.getNom = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Prix\"), React.createElement(\"input\", {\n      required: true,\n      type: \"text\",\n      ref: input => this.getPrenom = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Ar\"), React.createElement(\"button\", {\n      className: 'ajout btn btn-primary',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Ajouter\"), React.createElement(\"p\", {\n      id: \"erreur\",\n      className: 'erreur',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect()(PostForm);","map":{"version":3,"sources":["/home/dev/Documents/ONY/exercice/MiseEnLigneFront/src/PostForm.js"],"names":["React","Component","connect","PostForm","constructor","handleSubmit","e","setState","nb","state","mme","parseInt","getPrenom","value","nom","getNom","prenom","produit","charAt","toUpperCase","substring","toLowerCase","data","id","Date","editing","props","dispatch","type","console","log","render","event","preventDefault","isNaN","err","document","getElementById","innerHTML","input"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\nclass PostForm extends Component{\n    \n    constructor() {\n        super()\n        this.state = {\n            nb: 0,\n            mme : 0,\n        }\n    }\n    handleSubmit = (e) => {\n        this.setState({\n            nb : this.state.nb + 1,\n            mme :  this.state.mme + parseInt(this.getPrenom.value),\n        })\n\n        \n        const nom = this.getNom.value;\n        const prenom = this.getPrenom.value;\n        const produit = nom.charAt(0).toUpperCase() + nom.substring(1).toLowerCase()\n        const data = {\n            id: new Date(),            \n            nb : this.state.nb,\n            produit,\n            prenom,\n            mme : this.state.mme + parseInt(prenom ),\n            editing:false\n        }\n        this.props.dispatch({\n            type:'ADD_POST',\n            data\n        });\n        this.getNom.value = '';\n        this.getPrenom.value = '';\n\n        console.log('data1' , data.mme);\n        \n    }\n    render(){\n        return(\n            <center className={\"form\"} >\n                 <form onSubmit={event => {\n                    event.preventDefault()\n                    if (!this.getNom.value || !this.getPrenom.value) return\n\n                        if(isNaN(this.getPrenom.value)){\n                            var err = document.getElementById('erreur')\n                            err.innerHTML = 'Entrer un nombre'\n                        }else{\n                            this.handleSubmit()\n                            var err = document.getElementById('erreur')\n                            err.innerHTML = ''\n                    }}} \n                    className={'nom'}\n                > \n                    <label>Produit</label>\n                    <input required type='text' ref={(input)=>this.getNom = input} />\n                    <label>Prix</label>\n                    <input required type='text' ref={(input)=>this.getPrenom = input} />\n                    <label>Ar</label>\n                    <button className={'ajout btn btn-primary'}  >Ajouter</button>\n                    <p id='erreur' className={'erreur'}></p>\n\n                    \n                </form>\n            </center>\n        )\n    }\n}\nexport default connect()(PostForm)"]},"metadata":{},"sourceType":"module"}