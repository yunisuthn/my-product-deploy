{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/ONY/exercice/MiseEnLigneFront/src/Post.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submit = () => confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        return React.createElement(\"div\", {\n          className: \"custom-ui edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: 'h4',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, \"Suppression Produit\"), React.createElement(\"p\", {\n          className: 'p',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, this.props.post.produit), React.createElement(\"button\", {\n          className: 'boutton1',\n          onClick: () => {\n            this.props.dispatch({\n              type: 'DELETE_POST',\n              id: this.props.post.id\n            });\n            onClose();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"OUI\"), React.createElement(\"button\", {\n          className: 'boutton2',\n          onClick: onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"NON\"));\n      }\n    });\n\n    this.handleSubmit = jj => {//e.preventDefault();\n      // //const newNom = this.getNom.value;\n      // const newPrenom = this.getPrenom.value;\n      // const data = {\n      //   //newNom,\n      //   newPrenom\n      // }\n      //this.props.dispatch({ type: 'UPDATE', id: this.props.post.id, data: jj })\n      //console.log('jj ==>', jj)\n      // var test = this.props.posts;\n      // var longT = test.length;\n      // var tab = test[longT-1];\n      // var som = tab.mme\n      // console.log('jj ==>', som)\n    };\n\n    this.update = () => confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        //var data = {this.props.post.prenom}\n        return React.createElement(\"div\", {\n          className: \"custom-ui\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: 'edit',\n          onSubmit: event => {\n            event.preventDefault();\n\n            if (isNaN(this.newPrenom.value)) {\n              var err1 = document.getElementById('erreur1');\n              err1.innerHTML = 'Entrer un nombre';\n            } else {\n              this.handleSubmit(this.newPrenom.value);\n              onClose();\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          className: 'input',\n          ref: input => this.newPrenom = input,\n          defaultValue: this.props.post.prenom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          id: \"erreur1\",\n          className: 'erreur1',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: 'boutton3 nom' //  onClick={() => {\n          // \t if\t(isNaN(this.newPrenom.value)){\n          // \t\t//const data = this.newPrenom.value\n          // \t\t//console.log('data = ', data)\n          // \t\t//this.handleSubmit(this.newPrenom.value) \n          // \t\t//var jj = 12\n          // \t\tconsole.log('doucosud');\n          // \t\t}else\t{\n          // \t\t\tconsole.log('dd');\n          // \t\t}\n          // \t }}\n          // \t//this.props.dispatch({type:'EDIT_POST',id:this.props.post.id });\n          // \tthis.props.dispatch({ type: 'EDIT_POST', id: this.props.post.id,data:  this.newPrenom.value})\n          // \tconsole.log(this.newPrenom.value)\n          // \tonClose();\n          // }}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"OK\"), React.createElement(\"button\", {\n          onClick: onClose,\n          className: 'boutton4 ',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Annuler\")));\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.props.post.nb), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.props.post.produit), React.createElement(\"td\", {\n      className: 'prix',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.props.post.prenom, this.handleSubmit()), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.submit(),\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"button\", {\n      onClick: () => this.update(),\n      className: 'ajout btn btn-success',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" Edit\"))));\n  }\n\n}\n\nconst somme = state => {\n  return {};\n};\n\nexport default connect(somme)(Post);","map":{"version":3,"sources":["/home/dev/Documents/ONY/exercice/MiseEnLigneFront/src/Post.js"],"names":["React","Component","connect","confirmAlert","Post","submit","customUI","onClose","props","post","produit","dispatch","type","id","handleSubmit","jj","update","event","preventDefault","isNaN","newPrenom","value","err1","document","getElementById","innerHTML","input","prenom","render","nb","somme","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { confirmAlert } from 'react-confirm-alert'; \nimport 'react-confirm-alert/src/react-confirm-alert.css'\nclass Post extends Component {\n\n\t\n  submit = () => (\n\t\tconfirmAlert({\n\t\tcustomUI: ({ onClose }) => {\n\t\t\treturn (\n\t\t\t\t<div className='custom-ui edit'>\n\t\t\t\t\t<h4 className={'h4'}>Suppression Produit</h4>\n\t\t\t\t\t<p className={'p'}>{this.props.post.produit }</p>\n\t\t\t\t\t<button className={'boutton1'} onClick={() => {\n\t\t\t\t\t\t\tthis.props.dispatch({type:'DELETE_POST',id:this.props.post.id})\n\t\t\t\t\t\t\tonClose()\n\t\t\t\t\t}}>OUI</button>\n\t\t\t\t\t<button className={'boutton2'}onClick={onClose}>NON</button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}))\n\nhandleSubmit = (jj) => {\n  //e.preventDefault();\n  // //const newNom = this.getNom.value;\n  // const newPrenom = this.getPrenom.value;\n  // const data = {\n  //   //newNom,\n  //   newPrenom\n\t// }\n\t\n\t//this.props.dispatch({ type: 'UPDATE', id: this.props.post.id, data: jj })\n\t//console.log('jj ==>', jj)\n\n\t// var test = this.props.posts;\n\t// var longT = test.length;\n\t// var tab = test[longT-1];\n\t// var som = tab.mme\n\t// console.log('jj ==>', som)\n}\n\n\n  update = () => (\n\t\tconfirmAlert({\n\t\t\tcustomUI: ({ onClose }) => {\n\t\t\t\t//var data = {this.props.post.prenom}\n\n\t\t\t\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"custom-ui\" >\n\t\t\t\t\t<form className={'edit'}  \n\t\t\t\t\t\tonSubmit={event => {\n\t\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\t\tif(isNaN(this.newPrenom.value)){\n\t\t\t\t\t\t\t\t\t\tvar err1 = document.getElementById('erreur1')\n\t\t\t\t\t\t\t\t\t\terr1.innerHTML = 'Entrer un nombre'\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tthis.handleSubmit(this.newPrenom.value)\n\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t}}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input type='text' className={'input'} ref={(input)=>this.newPrenom = input }defaultValue={this.props.post.prenom}  />\n\t\t\t\t\t\t<br/>\n\n\t\t\t\t\t\t<p id='erreur1' className={'erreur1'}></p>\n\t\t\t\t\t\t<button className={'boutton3 nom'}\n\n\t\t\t\t\t\t\t//  onClick={() => {\n\t\t\t\t\t\t\t// \t if\t(isNaN(this.newPrenom.value)){\n\t\t\t\t\t\t\t// \t\t//const data = this.newPrenom.value\n\t\t\t\t\t\t\t// \t\t//console.log('data = ', data)\n\t\t\t\t\t\t\t// \t\t//this.handleSubmit(this.newPrenom.value) \n\t\t\t\t\t\t\t// \t\t//var jj = 12\n\t\t\t\t\t\t\t// \t\tconsole.log('doucosud');\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// \t\t}else\t{\n\t\t\t\t\t\t\t// \t\t\tconsole.log('dd');\n\t\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t\t// \t }}\n\t\t\t\t\t\t\t// \t//this.props.dispatch({type:'EDIT_POST',id:this.props.post.id });\n\t\t\t\t\t\t\t// \tthis.props.dispatch({ type: 'EDIT_POST', id: this.props.post.id,data:  this.newPrenom.value})\n\t\t\t\t\t\t\t// \tconsole.log(this.newPrenom.value)\n\t\t\t\t\t\t\t// \tonClose();\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tOK\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button onClick={onClose} className={'boutton4 '}>Annuler</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t})\n\t)\n  render() {\n  return (\n\n\t\t<tbody>\n      <tr>\n        <td>{this.props.post.nb}</td>\n        <td>{this.props.post.produit }</td>\n        <td className={'prix'}>{this.props.post.prenom}{this.handleSubmit()}</td>\n        <td> \n\t\t<button onClick={()=>this.submit() } className={\"btn btn-danger\"} >X</button>\n\t\t<button onClick={()=>this.update()} className={'ajout btn btn-success'}> Edit</button>\n\t\t\t\t\t{/* {this.props.posts.map((post) => (\n\t\t\t<div key={post.id}>\n\t\t\t\t {post.editing ? <EditComponent post={post} key={post.id} /> : <Post post={post}\n    key={post.id} />}\n\t\t\t</div>\n\t))} */}\n\t\t\t\t\t{/* <button\n       onClick={()=>this.props.dispatch({type:'EDIT_POST',id:this.props.post.id})}>\n       Edit</button> */}\n\t\t\t\t\t</td>        \n      </tr>\n\t\t</tbody>\n     \n\n\t\t\n  \n  );\n }\n}\n\nconst somme = (state) => {\n    return  {\n\t\t\n    }\n}\nexport default connect(somme)(Post);"]},"metadata":{},"sourceType":"module"}